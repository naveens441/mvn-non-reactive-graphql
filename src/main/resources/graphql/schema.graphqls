interface Human {
    name : String!
}

type Speaker implements Human{
    id: ID!
    name: String!
    twitter: String
}

type Attendee implements Human {
 id: ID!
 name: String!
}

type Talk {
  id: ID!
  title: String!
  description: String
    ##below speaker can be added creating Speaker Resolver which is implementing GraphQLResolver
    speakers :[Speaker]
}
union all=Speaker|Talk

type Query {
    allTalks: [Talk]
    allAttendees: [Attendee]
    allSpeakers: [Speaker]
    allAll:[all]
}
input SpeakerInput {
    name: String
    twitter: String
}
type Update{
    addSpeaker(speaker:SpeakerInput):Speaker
}
schema {
  query: Query
    mutation: Update
    # normally in place of update people uses Mutation
}


